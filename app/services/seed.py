from sqlalchemy.orm import Session
from sqlalchemy import inspect
from app import models
from app.utils.hashing import Hasher
from datetime import datetime


def run_seed(db: Session):
    inspector = inspect(db.bind)
    if "users" not in inspector.get_table_names():
        print("‚ö†Ô∏è Tabela users nie istnieje ‚Äì seed pominiƒôty.")
        return

    if db.query(models.User).first():
        print("‚ÑπÔ∏è Seed danych pominiƒôty ‚Äì u≈ºytkownicy ju≈º istniejƒÖ.")
        return
    
    print("üå± Uruchamiam seed danych...")

    admin = models.User(
        username="admin",
        email="admin@beetrack.pl",
        hashed_password=Hasher.hash_password("admin123"),
        role="admin"
    )

    worker = models.User(
        username="worker",
        email="worker@beetrack.pl",
        hashed_password=Hasher.hash_password("worker123"),
        role="worker"
    )

    product1 = models.Product(
        name="Mi√≥d lipowy",
        description="Delikatny, jasny mi√≥d z lipy",
        unit_price=25.0,
        stock_quantity=100
    )
    product2 = models.Product(
        name="Mi√≥d gryczany",
        description="Ciemny, intensywny mi√≥d z gryki",
        unit_price=30.0,
        stock_quantity=80
    )

    hive1 = models.Hive(name="UL-001", location="Pasieka p√≥≈Çnocna", status="active")
    hive2 = models.Hive(name="UL-002", location="Pasieka po≈Çudniowa", status="active")

    inspection1 = models.Inspection(
        hive=hive1,
        date=datetime.utcnow(),
        temperature=33.5,
        disease_detected="none",
        notes="Stan bardzo dobry."
    )

    db.add_all([admin, worker, product1, product2, hive1, hive2, inspection1])
    db.commit()

    print("‚úÖ Seed danych zako≈Ñczony.")
